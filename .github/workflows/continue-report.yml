name: Continue Report Generation

on:
  # 手動トリガー（API経由でも呼び出し可能）
  workflow_dispatch:
    inputs:
      orderId:
        description: 'Order ID to process'
        required: true
        type: string
      
  # リポジトリディスパッチ（APIから呼び出す用）
  repository_dispatch:
    types: [continue-report]

jobs:
  continue-report:
    runs-on: ubuntu-latest
    timeout-minutes: 2  # 2分でタイムアウト
    
    steps:
      - name: Determine wait time
        id: wait-time
        run: |
          # リトライの場合は30秒待つ、初回は10秒待つ
          IS_RETRY="${{ github.event.client_payload.retry }}"
          if [ "$IS_RETRY" = "true" ]; then
            echo "wait_seconds=30" >> $GITHUB_OUTPUT
            echo "This is a retry, waiting 30 seconds..."
          else
            echo "wait_seconds=10" >> $GITHUB_OUTPUT
            echo "Initial call, waiting 10 seconds..."
          fi
      
      - name: Wait for Batch API processing
        run: |
          WAIT_TIME="${{ steps.wait-time.outputs.wait_seconds }}"
          echo "Waiting $WAIT_TIME seconds for Batch API to process..."
          sleep $WAIT_TIME
      
      - name: Call continue-report-generation API
        id: api-call
        run: |
          # Order IDとBatch IDを取得（workflow_dispatchまたはrepository_dispatch）
          ORDER_ID="${{ github.event.inputs.orderId || github.event.client_payload.orderId }}"
          BATCH_ID="${{ github.event.inputs.batchId || github.event.client_payload.batchId }}"
          
          if [ -z "$ORDER_ID" ]; then
            echo "Error: No orderId provided"
            exit 1
          fi
          
          echo "Processing order: $ORDER_ID"
          echo "Batch ID: $BATCH_ID"
          echo "Calling API: https://line-love-edu.vercel.app/api/continue-report-generation"
          
          # APIを呼び出し（Batch IDも含める）
          RESPONSE=$(curl -s -w "\n%{http_code}" -X POST \
            https://line-love-edu.vercel.app/api/continue-report-generation \
            -H "Content-Type: application/json" \
            -H "X-GitHub-Actions: true" \
            -d "{\"orderId\": \"$ORDER_ID\", \"batchId\": \"$BATCH_ID\", \"continueFrom\": \"github-actions\"}")
          
          # HTTPステータスコードを取得
          HTTP_CODE=$(echo "$RESPONSE" | tail -n 1)
          BODY=$(echo "$RESPONSE" | head -n -1)
          
          echo "HTTP Status: $HTTP_CODE"
          echo "Response: $BODY"
          
          # レスポンスからstatusを抽出
          STATUS=$(echo "$BODY" | grep -o '"status":"[^"]*"' | cut -d'"' -f4 || echo "")
          echo "Extracted status: $STATUS"
          
          # 成功チェック（200-299）
          if [ "$HTTP_CODE" -ge 200 ] && [ "$HTTP_CODE" -lt 300 ]; then
            echo "✅ API call successful"
            echo "result=success" >> $GITHUB_OUTPUT
            
            # statusがwaiting_batchの場合、GitHub Actionsが再トリガーされることを通知
            if [ "$STATUS" = "waiting_batch" ]; then
              echo "⏳ Batch API is still processing. GitHub Actions will be re-triggered automatically."
            fi
          else
            echo "❌ API call failed with status $HTTP_CODE"
            echo "result=failed" >> $GITHUB_OUTPUT
            exit 1
          fi
      
      - name: Report result
        if: always()
        run: |
          if [ "${{ steps.api-call.outputs.result }}" = "success" ]; then
            echo "✅ Report generation continued successfully"
          else
            echo "⚠️ Report generation may have failed. Check logs for details."
          fi